package bio.guoda.preston.cmd;

import bio.guoda.preston.RefNodeFactory;
import com.google.zxing.WriterException;
import org.apache.commons.codec.binary.Base64;
import org.apache.commons.rdf.api.IRI;
import org.hamcrest.core.Is;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TemporaryFolder;

import java.io.ByteArrayOutputStream;
import java.io.IOException;

import static org.hamcrest.MatcherAssert.assertThat;

public class QRCodeGeneratorTest {

    @Rule
    public TemporaryFolder tmpFolder = new TemporaryFolder();

    @Test
    public void encodeHash() throws WriterException, IOException {
        IRI iri = RefNodeFactory.toIRI("hash://sha256/5891b5b522d5df086d0ff0b110fbd9d21bb4fc7163af34d08286a2e846f6be03");
        ByteArrayOutputStream output = new ByteArrayOutputStream();


        QRCodeGenerator.generateQRCode(iri, output);
        String imageBytes = Base64.encodeBase64String(output.toByteArray());

        assertThat(imageBytes, Is.is("iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAIAAADTED8xAAAE5ElEQVR42u3aQZLCMBAEQf7/afYLG4Smp2VnnQ02lpLDhD5f6cV9vAIBIAEgASABIAEgASABIAEgASABIAEgASABIAEgASABIAEgASABIAEgASABIAEgASABIAEgASA9CsBntd+e5z+f+u23n/pU8pr+NQUAAAAAAAAAAAAAAAAAAAAAAAA6AQxOsg7dK7kMp+6V3F43rikAAAAAAAAAAAAAAAAAAAAAAADQAGBuxNk/mrzx/bQ9MwAAAAAAAAAAAAAAAAAAAAAAAADA7qi0/PjXOnUAAAAAAAAAAAAAAAAAAAAAAAAAgBvHfHNDz/5hLgAAAAAAAAAAAAAAAAAAAAAAAABAcqg3N+I8NRhNQtoFcN3+AQAAAAAAAAAAAAAAAAAAAAAAAI7/gN1jZK7ZGnGWHw0EwDUAAOAaAABwDQAAuAYAAFwDgA6OFOcYJ0e3z1xQexoAAAQAAAIAAAEAgAAAoGMMurspf7vX3BacQ5KkVXXwDgAAAAAAAAAAAAAAAAAAAAAAALhogNg/rDy1wHObe/fI2isOwwEAAAAAAAAAAAAAAAAAAAAAwIsBJJdzd5smx6lzn9odywIAAAAAAAAAAAAAAAAAAAAAAAC3AGhbvCTati2YHLC2rSkAAAAAAAAAAAAAAAAAAAAAAABwL4DkQa7dw3lta9H/PQAAAAAAAAAAAAAAAAAAAAAAAEAewO5YbW5h5g7wJYeMSX6LQ08AAAAAAAAAAAAAAAAAAAAAAACgdqyW3O43Hs5LDiJ3D8wBAAAAAAAAAAAAAAAAAAAAAAAAxqA3jgL73/PuyNVhOAAAAAAAAAAAAAAAAAAAAAAAuHcMutvuEyYHmm3PPHcvAAAAAAAAAAAAAAAAAAAAAAAA4N4x6KnRZP9QLzlgvXHECQAAAAAAAAAAAAAAAAAAAAAAADxpDDr30ttoJb85ueGu2+4AAAAAAAAAAAAAAAAAAAAAAABAbbtHzXaP2c0Nl5ObO/l3CQAAAAAAAAAAAAAAAAAAAAAAAHSOQZ8x+Gt7Y21vo+1oIAAAAAAAAAAAAAAAAAAAAAAAADANYHccljzstTsc3P3rmWMDAAAAAAAAAAAAAAAAAAAAAAAAdAKY2167S37dAodpJdcdAAAAAAAAAAAAAAAAAAAAAAAA6ARw4wAxOWDd/dSNR/EAAAAAAAAAAAAAAAAAAAAAAACABgDJn9Q/Km27exJA+f4BAAAAAAAAAAAAAAAAAAAAAAAAHtbuMG4XSXLDVR10AwAAAAAAAAAAAAAAAAAAAAAAAFbGoLvHrW6EtDuWbfsTAQAAAAAAAAAAAAAAAAAAAAAAAG4BsLspb3zmuW3aPwZ1GhQAAAAAAAAAAAAAAAAAAAAAAJ4EoP9l7W645BG6tl4xBgUAAAAAAAAAAAAAAAAAAAAAAABqDmnNPWFydNs2ct0dQAMAAAAAAAAAAAAAAAAAAAAAAABvA5Bc8t1RYHKc2vbbAQAAAAAAAAAAAAAAAAAAAAAAgAYAuwucfOYkrTmQyYFvbP8AAAAAAAAAAAAAAAAAAAAAAAAAx5c8WT+ST1m76/7dCwAAAAAAAAAAAAAAAAAAAAAAAJDeEAACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkACQAJAAkDa6Q+DnF+sy3XfGAAAAABJRU5ErkJggg=="));
    }

}