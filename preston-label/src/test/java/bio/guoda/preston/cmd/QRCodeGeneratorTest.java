package bio.guoda.preston.cmd;

import bio.guoda.preston.RefNodeFactory;
import com.google.zxing.WriterException;
import org.apache.commons.codec.binary.Base64;
import org.apache.commons.lang3.StringUtils;
import org.apache.commons.rdf.api.IRI;
import org.hamcrest.core.Is;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.TemporaryFolder;

import java.io.ByteArrayOutputStream;
import java.io.IOException;

import static org.hamcrest.MatcherAssert.assertThat;

public class QRCodeGeneratorTest {

    @Rule
    public TemporaryFolder tmpFolder = new TemporaryFolder();

    @Test
    public void encodeHash() throws WriterException, IOException {
        IRI iri = RefNodeFactory.toIRI("hash://sha256/5891b5b522d5df086d0ff0b110fbd9d21bb4fc7163af34d08286a2e846f6be03");
        ByteArrayOutputStream output = new ByteArrayOutputStream();


        QRCodeGenerator.generateQRCode(iri, output);
        String imageBytes = Base64.encodeBase64String(output.toByteArray());

        String javaVersion = System.getProperty("java.version");
        if (StringUtils.startsWith(javaVersion, "21")) {
            assertThat(imageBytes, Is.is("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"));
        } else {
            assertThat(imageBytes, Is.is("iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAIAAADTED8xAAAFI0lEQVR42u3bQXYbMQxEQd//0skZ/Ew0mpz6WzmKh2RpAVM//6QP92MJBIAEgASABIAEgASABIAEgASABIAEgASABIAEgASABIAEgASABIAEgASABIAEgASABIAEgASABIAEgASABIAEgASAdD2An1S/+jUOPtHcW829euMOAgAAAAAAAAAAAAAAAAAAXAgg9s6/Wuu/7NPcps49wtZnR+ydAQAAAAAAAAAAAAAAAAAAKgEcPHkHRxlzu3jwAQ8e4oOvzu0gAAAAAAAAAAAAAAAAAAAAADNToAf22OIAAIDFAQAAiwMAABYHAAAszoenQHMDlrnnPXi7oeSJAAAAAAAAAAAAAAAAAAAAvg0gRmvuQGydvAeOKQAAAAAAAAAAAAAAAAAAwOsASuYeXu2fXAEAAAAAAAAAAAAAAAAAAFwI4Ma2DlPnFOjNLXbKAQBAAAAgAAAQAAC0T4FK3nnrbM0NwUrGawAAAAAAAAAAAAAAAAAAAB8DMDfoiJ28uY+Dubfq3G4AAAAAAAAAAAAAAAAAAIALAcytV8kRj9192Lo3ETMMAAAAAAAAAAAAAAAAAADw3BQo5iE2MprbxYNn+uD/e+mJBwAAAAAAAAAAAAAAAAAA6AMQGzjMbdvWVfuSSY4pEAAAAAAAAAAAAAAAAADgKkRkVrN1FyA2b5k7xFtjvU9MgQAAAAAAAAAAAAAAAACAT/8leG5TY2u9NeiIjapiAL44BgUAAAAAAAAAAAAAAAAAvvWX4LkF2rp0UDIF2jrxMUsAAAAAAAAAAAAAAAAAAAD3A9gasMxdwdi6Hz/n3/cBAAAAAAAAAAAAAAAAAAAANjzE/m3snefOVmygNDd9AgAAAAAAAAAAAAAAAAAAuB9AbFix1dzp6fzhmGEAAAAAAAAAAAAAAAAAAID7ARxcr63pxNxQaOudY8cUAAAAAAAAAAAAAAAAAADgOQBz1+VjF/Fj9+O3Pjtiz/vFKRAAAAAAAAAAAAAAAAAA8GkAB0c3sWlMyadDyfRpa9oGAAAAAAAAAAAAAAAAAABwA4DYoGPrfMSEd65k5yULAAAAAAAAAAAAAAAAAACADgCxCwtbg46tH+78GOp8QAAAAAAAAAAAAAAAAAAAgA4AMUsHf8mfsbYOse8DAAAAAAAAAAAAAAAAAAAAzOzEwbFAbHEfOKaxJ/J9AAAAAAAAAAAAAAAAAAAAgI0TcHDbYjfgD/5wbOlKPqQAAAAAAAAAAAAAAAAAAABumALNTSeumD5tHdPYjGhrfwEAAAAAAAAAAAAAAAAAACoBxG6ib02BYutc8pWGnrsPAAAAAAAAAAAAAAAAAAAAT7c199g6aiWTq545DwAAAAAAAAAAAAAAAAAAQMEUKHYCOvc49sNz3yWIDdAAAAAAAAAAAAAAAAAAAADuB1Dyzgc3JnbySn7nLaUAAAAAAAAAAAAAAAAAAAD3A5i7ah87Lp2DjpIvANRelAAAAAAAAAAAAAAAAAAAAHgawByPuelT7Kg9edkBAAAAAAAAAAAAAAAAAADAFKj7hsJfhiSxtZoboAEAAAAAAAAAAAAAAAAAALwOIEYr9urcFOjgqZ37dCg5GwAAAAAAAAAAAAAAAAAAAB0Atv74PzeNeW8odMVqAAAAAAAAAAAAAAAAAAAAVAKQCgNAAEgASABIAEgASABIAEgASABIAEgASABIAEgASABIAEgASABIAEgASABIAEgASABIAEgASABIAEgASABIAEgASABIAEgD/QcMsZpBJZOrNAAAAABJRU5ErkJggg=="));
        }
    }

}